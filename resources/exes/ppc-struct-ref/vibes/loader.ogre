(declare arch (name str))
(declare bits (size int))
(declare base-address (addr int))
(declare entry-point (addr int))
(declare is-little-endian (flag bool))
(declare mapped (addr int) (size int) (off int))
(declare code-region (addr int) (size int) (off int))
(declare named-region (addr int) (size int) (name str))
(declare segment (addr int) (size int) (r bool) (w bool) (x bool))
(declare section (addr int) (size int))
(declare code-start (addr int))
(declare named-symbol (addr int) (name str))
(declare symbol-chunk (addr int) (size int) (root int))
(declare symbol-value (addr int) (value int))

(arch (name powerpc))
(bits (size 32))
(base-address (addr 0x10000000))
(is-little-endian (flag false))
(entry-point (addr 0x10000300))

(mapped (addr 0x100004ac) (size 0x30) (off 0x4ac))
(code-region (addr 0x100004ac) (size 0x30) (off 0x4ac))
(named-region (addr 0x100004ac) (size 0x30) (name foo@100004ac))
(code-start (addr 0x100004ac))
(named-symbol (addr 0x100004ac) (name foo))
(symbol-chunk (addr 0x100004ac) (size 0x30) (root 0x100004ac))
(symbol-value (addr 0x100004ac) (value 0x100004ac))

(mapped (addr 0x100004dc) (size 0x40) (off 0x4dc))
(code-region (addr 0x100004dc) (size 0x40) (off 0x4dc))
(named-region (addr 0x100004dc) (size 0x40) (name main@100004dc))
(code-start (addr 0x100004dc))
(named-symbol (addr 0x100004dc) (name main))
(symbol-chunk (addr 0x100004dc) (size 0x40) (root 0x100004dc))
(symbol-value (addr 0x100004dc) (value 0x100004dc))

